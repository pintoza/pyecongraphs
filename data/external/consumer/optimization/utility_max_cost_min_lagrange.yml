schema: EconSchema
params:
  - name: p1
    value: 1
    max: 10
    min: 1
    round: 0.01
  - name: p2
    value: 1
    max: 10
    min: 1
    round: 0.01
  - name: m
    value: 8
    max: 10
    min: 1
    round: 0.01
  - name: U
    value: 4
    min: 3
    max: 7
    round: 0.01
calcs:
  slope: (params.p1/(params.p1 + params.p2))
  arrowScale: (sqrt(params.p1*params.p1 + params.p2*params.p2))
  arrowDX: (2*params.p1/calcs.arrowScale)
  arrowDY: (2*params.p2/calcs.arrowScale)
layout:
  TwoHorizontalGraphsPlusSidebar:
    leftGraph:
      xAxis:
        title: Good 1 ($x_1$)
        ticks: 0
      yAxis:
        title: Good 2 ($x_2$)
        ticks: 0
      objects:

        - EconIndifferenceMap:
            utilityFunction:
              CobbDouglas:
                alpha: 0.5
            levels: [ 1,2,3,4,5,6,7,8,9 ]

        - EconOptimalBundle:
            name: X
            utilityFunction:
              CobbDouglas:
                alpha: 0.5
            indifferenceCurve:
              label:
                text:
            budgetLine:
              p1: params.p1
              p2: params.p2
              m: 8
              handles: true
              draggable: true
              strokeWidth: 5
              label:
                text: m

        - Line:
            slope: (params.p1/params.p2)



    rightGraph:
      xAxis:
        title: Good 1 ($x_1$)
        ticks: 0
      yAxis:
        title: Good 2 ($x_2$)
        ticks: 0
      objects:

        - EconIndifferenceMap:
            utilityFunction:
              PerfectSubstitutes:
                alpha: calcs.slope
            levels: [ 1,2,3,4,5,6,7,8,9 ]

        - LowestCostBundle:
            name: XC
            label:
              text: X^c
            utilityFunction:
              CobbDouglas:
                alpha: 0.5
            prices: [params.p1, params.p2]
            indifferenceCurve:
              strokeWidth: 5
            level: params.U
            budgetLine:
              label:
                text:
            droplines:
              vertical: x_1^c
              horizontal: x_2^c


        - Line:
            slope: (params.p1/params.p2)


    sidebar:
      controls:
        - title: Same tangency condition, difference constraints
          description: Utility maximization (left) and cost minimization (right) when the optimum occurs at a tangency point.
          sliders:
            - param: p1
              label: p_1
            - param: p2
              label: p_2
          divs:
            - html: "`$$\\\\textcolor{${colors.orange}}{\\\\text{Tangency condition: }MRS = {p_1 \\\\over p_2} = ${(params.p1/params.p2).toFixed(2)}}$$`"