---
schema: EconSchema
version: 1
aspectRatio: 2
params:
- name: a
  value: '0.5'
  min: '0.2'
  max: '0.8'
  round: '0.01'
- name: p
  value: '3'
  min: '0.1'
  max: '10'
  round: '0.01'
- name: q
  value: '4'
  min: '0.1'
  max: '10'
  round: '0.01'
- name: m
  value: '120'
  min: '0'
  max: '400'
  round: '1'
- name: showIOC
  value: false
- name: showPOC
  value: false
- name: showMax
  value: false
calcs:
  cutoff: "(params.a*params.q/(1-params.a))"
  cutoffQ: "((1-params.a)*params.m/(params.a*params.q))"
layout:
  type: TwoVerticalGraphsPlusSidebar
  def:
    topGraph:
      xAxis:
        title: Units of Good 1
        orient: bottom
        min: 0
        max: 100
        ticks: 10
      yAxis:
        title: Units of Good 2
        orient: left
        min: 0
        max: 50
      objects:
      - type: EconOptimalBundle
        def:
          name: optimum2
          utilityFunction:
            type: Substitutes
            def:
              alpha: params.a
          budgetLine:
            p1: 2
            p2: params.q
            m: params.m
            inMap: true
          indifferenceCurve:
            inMap: true
          label:
          droplines: {}
          r: 4
          color: colors.offer
          show: params.showPOC
      - type: EconOptimalBundle
        def:
          name: optimum4
          utilityFunction:
            type: Substitutes
            def:
              alpha: params.a
          budgetLine:
            p1: 4
            p2: params.q
            m: params.m
            inMap: true
          indifferenceCurve:
            inMap: true
          label:
          droplines: {}
          r: 4
          color: colors.offer
          show: params.showPOC
      - type: EconOptimalBundle
        def:
          name: optimum6
          utilityFunction:
            type: Substitutes
            def:
              alpha: params.a
          budgetLine:
            p1: 6
            p2: params.q
            m: params.m
            inMap: true
          indifferenceCurve:
            inMap: true
          label:
          droplines: {}
          r: 4
          color: colors.offer
          show: params.showPOC
      - type: EconOptimalBundle
        def:
          name: optimum8
          utilityFunction:
            type: Substitutes
            def:
              alpha: params.a
          budgetLine:
            p1: 8
            p2: params.q
            m: params.m
            inMap: true
          indifferenceCurve:
            inMap: true
          label:
          droplines: {}
          r: 4
          color: colors.offer
          show: params.showPOC
      - type: EconOptimalBundle
        def:
          name: optimum
          color: demand
          utilityFunction:
            type: Substitutes
            def:
              alpha: params.a
          budgetLine:
            p1: params.p
            p2: params.q
            m: params.m
            handles: true
            draggable: true
            color: budget
          showBudgetLine: true
          showIndifferenceCurve: true
      - type: Segment
        def:
          a:
          - 0
          - "(params.m/params.q)"
          b:
          - calcs.cutoffQ
          - 0
          show: params.showPOC
          color: colors.demand
          strokeWidth: 4
      - type: Segment
        def:
          a:
          - calcs.cutoffQ
          - 0
          b:
          - 100
          - 0
          show: params.showPOC
          color: colors.demand
          strokeWidth: 4
    bottomGraph:
      xAxis:
        title: Units of Good 1
        orient: bottom
        min: 0
        max: 100
        ticks: 10
      yAxis:
        title: Price of Good 1
        orient: left
        min: 0
        max: 10
      objects:
      - type: Segment
        def:
          a:
          - 0
          - calcs.cutoff
          b:
          - calcs.cutoffQ
          - calcs.cutoff
          stroke: colors.demand
      - type: Segment
        def:
          a:
          - 0.1
          - calcs.cutoff
          b:
          - 0.1
          - 10
          stroke: colors.demand
          strokeWidth: 3
      - type: Curve
        def:
          univariateFunction:
            fn: "(params.m)/(y)"
            ind: y
            max: calcs.cutoff
          color: colors.demand
          label:
            text: "\\text{Demand}"
            y: 1
      - type: Point
        def:
          coordinates:
          - calcs.optimum2.x
          - 2
          r: 4
          color: colors.demand
          show: params.showPOC
      - type: Point
        def:
          coordinates:
          - calcs.optimum4.x
          - 4
          r: 4
          color: colors.demand
          show: params.showPOC
      - type: Point
        def:
          coordinates:
          - calcs.optimum6.x
          - 6
          r: 4
          color: colors.demand
          show: params.showPOC
      - type: Point
        def:
          coordinates:
          - calcs.optimum8.x
          - 8
          r: 4
          color: colors.demand
          show: params.showPOC
      - type: Segment
        def:
          a:
          - 0
          - params.p
          b:
          - 100
          - params.p
          stroke: green
          drag:
          - directions: y
            param: p
            expression: params.p + drag.dy
          label:
            text: p_1
            location: 0.05
      - type: Segment
        def:
          a:
          - 0
          - 2
          b:
          - 100
          - 2
          color: colors.budget
          strokeWidth: 1
          lineStyle: dotted
          show: params.showPOC
      - type: Segment
        def:
          a:
          - 0
          - 4
          b:
          - 100
          - 4
          color: colors.budget
          strokeWidth: 1
          lineStyle: dotted
          show: params.showPOC
      - type: Segment
        def:
          a:
          - 0
          - 6
          b:
          - 100
          - 6
          color: colors.budget
          strokeWidth: 1
          lineStyle: dotted
          show: params.showPOC
      - type: Segment
        def:
          a:
          - 0
          - 8
          b:
          - 100
          - 8
          color: colors.budget
          strokeWidth: 1
          lineStyle: dotted
          show: params.showPOC
      - type: Point
        def:
          coordinates:
          - calcs.optimum.x
          - params.p
          label:
            text: d_1(p_1|p_2,m)
          color: colors.demand
          droplines:
            vertical: x_1^*
          drag:
          - directions: y
            param: p
            expression: params.p + drag.dy
      - Curve:
          fn: params.m/(y)
          color: demand
          lineStyle: dotted
          show: params.showMax
      - Label:
          coordinates: [params.m/9, 9]
          text: "`x_1 = m/p_1`"
          position: bl
          color: demand
          show: params.showMax

    sidebar:
      controls:
      - title: Utility Function
        sliders:
        - param: a
          label: "\\alpha"
        divs:
        - html: "`$$u(x_1,x_2) = \\\\alpha x_1 + (1 - \\\\alpha) x_2$$`"
      - title: Budget Parameters
        sliders:
        - param: p
          label: p_1
        - param: q
          label: p_2
        - param: m
          label: m
        checkboxes:
          - param: showMax
            label: \text{Show }m/p_1