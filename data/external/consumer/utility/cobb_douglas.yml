---
schema: EconSchema
version: 1
aspectRatio: 2
params:
  - name: x1
    value: 30
    min: 1
    max: 60
    round: 1
  - name: x2
    value: 30
    min: 1
    max: 60
    round: 1
  - name: a
    value: 3
    min: 1
    max: 8
  - name: b
    value: 2
    min: 1
    max: 8
calcs:
  alpha: (params.a/(params.a + params.b))
  mrs: (params.a*params.x2/(params.b*params.x1))
  dx: (sqrt(400/(1 + calcs.mrs*calcs.mrs)))
layout:
  OneGraphPlusSidebar:

    graph:
      xAxis:
        max: 80
        ticks: 4
        title: Good 1
      yAxis:
        max: 80
        ticks: 4
        title: Good 2
      objects:
        - EconIndifferenceMap:
            utilityFunction:
              CobbDouglas:
                alpha: calcs.alpha
            levels: [ 10, 20, 30, 40, 50, 60, 70, 80, 90]
        - EconBundle:
            coordinates: [ params.x1, params.x2 ]
            color: blue
            r: 4
            label:
              text:
            droplines:
              vertical: params.x1
              horizontal: params.x2
            utilityFunction:
              CobbDouglas:
                alpha: calcs.alpha
            drag:
              - horizontal: x1
              - vertical: x2
            indifferenceCurve:
              label:
                text:
        - Line:
            point: [params.x1, params.x2]
            slope: (-1*calcs.mrs)
            min: (params.x1 - calcs.dx)
            max: (params.x1 + calcs.dx)
            color: mrs
            label:
              text: "`MRS = ${calcs.mrs.toFixed(2)}`"
              x: (params.x1 + calcs.dx)
              position: t



    sidebar:
      controls:
        - title: Cobb-Douglas Utility
          description: "Adjust the parameters a and b to see how the indifference map changes:"
          sliders:
            - param: a
              label: a
            - param: b
              label: b
          divs:
            - html: "`$$u(x_1,x_2) = x_1^a x_2^b$$`"
            - html: "`$$MRS(x_1,x_2) = {ax_2 \\\\over bx_1}$$`"
            - html: "`$$MRS(${params.x1.toFixed(0)},${params.x2.toFixed(0)}) = {${params.a.toFixed(0)} \\\\times ${params.x2.toFixed(0)} \\\\over ${params.b.toFixed(0)} \\\\times ${params.x1.toFixed(0)}} = ${calcs.mrs.toFixed(2)}$$`"