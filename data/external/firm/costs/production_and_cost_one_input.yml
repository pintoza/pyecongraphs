schema: EconSchema
version: 1
params:
  - name: A
    value: "5"
    min: "1"
    max: "10"
    round: "0.01"
  - name: a
    value: "0.5"
    min: "0.25"
    max: "2"
    round: "0.01"
  - name: "y"
    value: "50"
    min: "0"
    max: "100"
    round: "1"
  - name: w
    value: "10"
    min: "0"
    max: "20"
    round: "0.01"
calcs:
  L: ((params.y)/(params.A))^(1/(params.a))
  c: ((params.w)*((params.y)/(params.A))^(1/(params.a)))
  MPL: ((params.a)*(params.A)*(params.L)^(params.a - 1))
layout:
  type: TwoVerticalGraphsPlusSidebar
  def:
    topGraph:
      xAxis:
        title: Hours of Labor ($L$)
        orient: bottom
        min: 0
        max: (3*20^(0.7/params.a))
      yAxis:
        title: Output ($q$)
        orient: left
        min: 0
        max: 100
      objects:
        - type: Grid
          def:
            xStep: 0
            yStep: 20
        - type: Curve
          def:
            univariateFunction:
              fn: ((y)/(params.A))^(1/(params.a))
              samplePoints: 200
              ind: "y"
            stroke: colors.production
            strokeWidth: 2
            label:
              text: f(L)
              "y": 20
        - type: Point
          def:
            coordinates:
              - calcs.L
              - params.y
            fill: colors.production
            drag:
              - directions: "y"
                param: "y"
                expression: params.y + drag.dy
            droplines:
              vertical: '`L(${(params.y).toFixed(0)}) = ${calcs.L.toFixed(1)}`'
              horizontal: '`q = ${(params.y).toFixed(0)}`'
    bottomGraph:
      xAxis:
        title: Output ($q$)
        orient: bottom
        min: 0
        max: 100
      yAxis:
        title: Total Cost (Dollars)
        orient: left
        min: 0
        max: (30*20^(0.7/params.a))
      objects:
        - type: Grid
          def:
            yStep: 0
            xStep: 20
        - type: Curve
          def:
            univariateFunction:
              fn: (params.w)*((x)/(params.A))^(1/(params.a))
              samplePoints: 200
            stroke: colors.shortRun
            strokeWidth: 2
            label:
              text: TC(q)
              x: 20
        - type: Point
          def:
            coordinates:
              - params.y
              - calcs.c
            color: colors.shortRun
            drag:
              - directions: x
                param: "y"
                expression: params.y + drag.dx
            droplines:
              vertical: '`q = ${params.y.toFixed(0)}`'
              horizontal: '`TC(${(params.y).toFixed(0)}) = ${(calcs.c).toFixed(0)}`'
    sidebar:
      controls:
        - title: Production and Cost with One Input
          sliders:
            - param: A
              label: A
            - param: a
              label: a
            - param: w
              label: w
          divs:
            - html: '`Suppose the firm''s production function is $$\\color{${colors.production}}{f(L) = AL^a = ${params.A.toFixed(2)} L^{ ${params.a.toFixed(2)} } }$$`'
            - html: '`In order to produce $q = ${params.y.toFixed(0)}$ units of output, the firm needs to hire ${calcs.L.toFixed(1)} hours of labor: $$\\begin{aligned}${params.A.toFixed(2)} L^{ ${params.a.toFixed(2)} } &= ${params.y.toFixed(1)}\\\\L^{ ${params.a.toFixed(2)} } & = ${((params.y)/(params.A)).toFixed(1)}\\\\L(q) &= ${calcs.L.toFixed(1)}\\end{aligned}$$`'
            - html: '`At a wage rate of $w = ${params.w.toFixed(2)}$ per hour, ${calcs.L.toFixed(1)} hours of labor costs $$\\color{${colors.shortRun}}{TC( ${params.y.toFixed(0)} ) = wL(${params.y.toFixed(0)}) = ${params.w.toFixed(2)} \\times ${calcs.L.toFixed(1)} = ${calcs.c.toFixed(2)}}$$`'
